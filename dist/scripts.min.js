let pokemonRepository = function () { let t = [], e = "https://pokeapi.co/api/v2/pokemon/?limit=150", i = document.querySelector("#searchIn"); function n(e) { t.push(e) } function o(t) { pokemonRepository.loadDetails(t).then(function () { !function (t) { pokemonRepository.loadDetails(t).then(function () { let e = $(".modal-body"), n = $(".modal-title"); n.empty(), e.empty(); let o = $("<h1>" + t.name + "</h1>"), a = $('<img class="modal-img" style="width:50%">'); a.attr("src", t.imageUrl); let l = $('<img class="modal-img" style="width:50%">'); l.attr("src", t.imageUrlBack); let s = $("<p>Height: " + t.height + "</p>"), p = $("<p>Weight: " + t.weight + "</p>"), r = $("<p>Types: " + t.types + "</p>"), c = $("<p>Abilities: " + t.abilities + "</p>"); i.addEventListener("input", function () { let t = document.querySelectorAll(".group-list-item"), e = i.value.toUpperCase(); t.forEach(function (t) { t.innerText.toUpperCase().indexOf(e) > -1 ? t.style.display = "" : t.style.display = "none" }) }), n.append(o), e.append(a), e.append(l), e.append(s), e.append(p), e.append(r), e.append(c), $("#my-modal").modal("toggle") }) }(t) }) } return { add: n, getAll: function () { return t }, addListItem: function (t) { let e = document.querySelector(".list-group"), i = document.createElement("li"), n = document.createElement("button"); n.innerText = t.name, n.classList.add("btn"), n.classList.add("btn-primary"), i.classList.add("group-list-item"), n.setAttribute("data-target", "#my-modal"), n.setAttribute("data-toggle", "modal"), i.appendChild(n), e.appendChild(i), n.addEventListener("click", function () { o(t) }) }, loadList: function () { return fetch(e).then(function (t) { return t.json() }).then(function (t) { t.results.forEach(function (t) { n({ name: t.name, detailsUrl: t.url }) }) }).catch(function (t) { console.error(t) }) }, loadDetails: function (t) { let e = t.detailsUrl; return fetch(e).then(function (t) { return t.json() }).then(function (e) { t.imageUrl = e.sprites.front_default, t.imageUrlBack = e.sprites.back_default, t.height = e.height, t.weight = e.weight, t.types = []; for (var i = 0; i < e.types.length; i++)t.types.push(e.types[i].type.name); for (t.types = t.types.join(",  "), t.abilities = [], i = 0; i < e.abilities.length; i++)t.abilities.push(e.abilities[i].ability.name); t.abilities = t.abilities.join(",  ") }).catch(function (t) { console.error(t) }) }, showDetails: o } }(); pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (t) { pokemonRepository.addListItem(t) }) });